# for details see: http://www.ros.org/wiki/navigation/Tutorials/RobotSetup

obstacle_range: 5 #2 #1 #2.5
raytrace_range: 5.5 #5
#footprint: [[0.348, 0.255], [-0.162, 0.255], [-0.162, -0.255], [0.348, -0.255]]
footprint: [[0.135, 0.255], [-0.375, 0.255], [-0.375, -0.255], [0.135, -0.255]]
update_frequency: 1 #5.0   
publish_frequency: 1 #5.0  
transform_tolerance: 2
min_obstacle_height: -1 

# Just tilt laser scanner
#observation_sources: tilt_scan_sensor
#tilt_scan_sensor: {sensor_frame: base_laser, data_type: LaserScan, topic: /tilt_scan, marking: true, clearing: true}

# Just flat laser scanner
#observation_sources: flat_scan_sensor
#flat_scan_sensor: {sensor_frame: base_laser, data_type: LaserScan, topic: /flat_scan, marking: true, clearing: true}

# Both flat_scan and tilt_scan
#observation_sources: flat_scan_sensor tilt_scan_sensor
#flat_scan_sensor: {sensor_frame: base_laser, data_type: LaserScan, topic: /flat_scan, marking: true, clearing: true}
#tilt_scan_sensor: {sensor_frame: base_laser, data_type: LaserScan, topic: /tilt_scan, marking: true, clearing: true}

# Tilting point cloud
#observation_sources: tilt_scan_sensor flat_scan_sensor
#tilt_scan_sensor: {sensor_frame: base_laser, data_type: PointCloud, topic: /gathered_cloud, marking: true, clearing: true}
#flat_scan_sensor: {sensor_frame: base_laser, data_type: LaserScan, topic: /flat_scan, marking: true, clearing: true}

# Both flat_scan and Kinect
#observation_sources: flat_scan_sensor fake_laser_scan
#flat_scan_sensor: {sensor_frame: base_laser, data_type: LaserScan, topic: /flat_scan, marking: true, clearing: true}
#fake_laser_scan: {sensor_frame: bottom_camera_rgb_optical_frame, data_type: LaserScan, topic: /fake_laserscan, marking: true, clearing: true}


# Point Cloud from the gathered cloud
#observation_sources: point_cloud_sensor
#point_cloud_sensor: {sensor_frame: map, data_type: PointCloud, topic: /gathered_cloud, marking: true, clearing: true}

map_type: costmap #Testing

# Groovy
#observation_sources: laser_scan_sensor fake_laser_scan
#laser_scan_sensor: {sensor_frame: base_laser, data_type: LaserScan, topic: /scan, marking: true, clearing: true}
#fake_laser_scan: {sensor_frame: bottom_camera_rgb_optical_frame, data_type: LaserScan, topic: /fake_laserscan, marking: true, clearing: true}
#map_type: costmap
